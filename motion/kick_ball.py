#!/usr/bin/python2.7 
# -*- coding: utf-8 -*-

'''

ZZU-DROID团队
模块功能：
    用于踢球和运球

'''
#踢球，传入的是实例化的almotion
def kick_ball(motion):
  names = list()
  times = list()
  keys = list()

  names.append("HeadPitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.0107799, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.0107799, [3, -0.653333, 0], [3, 0.0933333, 0]], [-0.0107799, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.0107799, [3, -0.973333, 0], [3, 0.533333, 0]], [-0.0245859, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("HeadYaw")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.00617791, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.00617791, [3, -0.653333, 0], [3, 0.0933333, 0]], [-0.00617791, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.00617791, [3, -0.973333, 0], [3, 0.533333, 0]], [-0.0107799, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LAnklePitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.354396, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.351328, [3, -0.653333, 0], [3, 0.0933333, 0]], [-0.374338, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.368202, [3, -0.973333, -0.00330324], [3, 0.533333, 0.00181]], [-0.358999, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LAnkleRoll")
  times.append([0.04, 0.8, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.00149202, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.336849, [3, -0.253333, -0.00334156], [3, 0.4, 0.00527615]], [0.342125, [3, -0.4, -0.00184062], [3, 0.0933333, 0.000429479]], [0.343659, [3, -0.0933333, -0.00120799], [3, 0.973333, 0.0125976]], [0.383541, [3, -0.973333, 0], [3, 0.533333, 0]], [0.00174533, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LElbowRoll")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.0349066, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.0349066, [3, -0.653333, 0], [3, 0.0933333, 0]], [-0.0398422, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.0352399, [3, -0.973333, 0], [3, 0.533333, 0]], [-0.977116, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LElbowYaw")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-1.37297, [3, -0.0133333, 0], [3, 0.653333, 0]], [-1.55092, [3, -0.653333, 0], [3, 0.0933333, 0]], [-1.3653, [3, -0.0933333, 0], [3, 0.973333, 0]], [-1.3653, [3, -0.973333, 0], [3, 0.533333, 0]], [-1.36223, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LHand")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[0.2656, [3, -0.0133333, 0], [3, 0.653333, 0]], [0.2656, [3, -0.653333, 0], [3, 0.0933333, 0]], [0.2656, [3, -0.0933333, 0], [3, 0.973333, 0]], [0.2656, [3, -0.973333, 0], [3, 0.533333, 0]], [0.254, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LHipPitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.45709, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.469363, [3, -0.653333, 0], [3, 0.0933333, 0]], [-0.469363, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.455555, [3, -0.973333, 0], [3, 0.533333, 0]], [-0.45709, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LHipRoll")
  times.append([0.04, 0.8, 2, 2.28, 5.2, 6.8])
  keys.append([[0.00464392, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.29147, [3, -0.253333, 0.00871036], [3, 0.4, -0.0137532]], [-0.305223, [3, -0.4, 0], [3, 0.0933333, 0]], [-0.305223, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.305223, [3, -0.973333, 0], [3, 0.533333, 0]], [0.00617791, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LHipYawPitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[4.19617e-05, [3, -0.0133333, 0], [3, 0.653333, 0]], [4.19617e-05, [3, -0.653333, 0], [3, 0.0933333, 0]], [4.19617e-05, [3, -0.0933333, 0], [3, 0.973333, 0]], [4.19617e-05, [3, -0.973333, 0], [3, 0.533333, 0]], [4.19617e-05, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LKneePitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[0.70253, [3, -0.0133333, 0], [3, 0.653333, 0]], [0.704064, [3, -0.653333, 0], [3, 0.0933333, 0]], [0.704064, [3, -0.0933333, 0], [3, 0.973333, 0]], [0.71787, [3, -0.973333, 0], [3, 0.533333, 0]], [0.708667, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LShoulderPitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[1.4772, [3, -0.0133333, 0], [3, 0.653333, 0]], [1.61526, [3, -0.653333, 0], [3, 0.0933333, 0]], [1.57077, [3, -0.0933333, 0], [3, 0.973333, 0]], [1.64594, [3, -0.973333, 0], [3, 0.533333, 0]], [1.44652, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LShoulderRoll")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[0.118076, [3, -0.0133333, 0], [3, 0.653333, 0]], [0.101202, [3, -0.653333, 0], [3, 0.0933333, 0]], [0.105804, [3, -0.0933333, -0.000313196], [3, 0.973333, 0.00326618]], [0.11194, [3, -0.973333, -0.00613623], [3, 0.533333, 0.00336232]], [0.269941, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("LWristYaw")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.383541, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.176453, [3, -0.653333, -0.053695], [3, 0.0933333, 0.00767072]], [-0.168782, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.440299, [3, -0.973333, 0], [3, 0.533333, 0]], [0.0275701, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RAnklePitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.357381, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.981718, [3, -0.653333, 0], [3, 0.0933333, 0]], [0.342125, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.237728, [3, -0.973333, 0.14964], [3, 0.533333, -0.0819944]], [-0.352778, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RAnkleRoll")
  times.append([0.04, 0.8, 2, 2.28, 5.2, 6.8])
  keys.append([[0.00310993, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.256563, [3, -0.253333, 0], [3, 0.4, 0]], [0.127364, [3, -0.4, 0], [3, 0.0933333, 0]], [0.127364, [3, -0.0933333, 0], [3, 0.973333, 0]], [0.090548, [3, -0.973333, 0.0267568], [3, 0.533333, -0.0146612]], [0.00310993, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RElbowRoll")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[0.036858, [3, -0.0133333, 0], [3, 0.653333, 0]], [0.0353239, [3, -0.653333, 0], [3, 0.0933333, 0]], [0.038392, [3, -0.0933333, 0], [3, 0.973333, 0]], [0.0353239, [3, -0.973333, 0], [3, 0.533333, 0]], [0.967996, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RElbowYaw")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[1.45572, [3, -0.0133333, 0], [3, 0.653333, 0]], [1.37442, [3, -0.653333, 0], [3, 0.0933333, 0]], [1.39283, [3, -0.0933333, -0.00138697], [3, 0.973333, 0.0144641]], [1.42198, [3, -0.973333, 0], [3, 0.533333, 0]], [1.36522, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RHand")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[0.258, [3, -0.0133333, 0], [3, 0.653333, 0]], [0.258, [3, -0.653333, 0], [3, 0.0933333, 0]], [0.258, [3, -0.0933333, 0], [3, 0.973333, 0]], [0.258, [3, -0.973333, 0], [3, 0.533333, 0]], [0.264, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RHipPitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.457173, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.452573, [3, -0.653333, 0], [3, 0.0933333, 0]], [-1.11066, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.688808, [3, -0.973333, -0.141382], [3, 0.533333, 0.0774694]], [-0.454105, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RHipRoll")
  times.append([0.04, 0.8, 2, 2.28, 5.2, 6.8])
  keys.append([[0.00310993, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.270526, [3, -0.253333, 0.00643108], [3, 0.4, -0.0101543]], [-0.28068, [3, -0.4, 0.0101543], [3, 0.0933333, -0.00236934]], [-0.326699, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.325165, [3, -0.973333, -0.00153415], [3, 0.533333, 0.000840629]], [-0.00149202, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RHipYawPitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[4.19617e-05, [3, -0.0133333, 0], [3, 0.653333, 0]], [4.19617e-05, [3, -0.653333, 0], [3, 0.0933333, 0]], [4.19617e-05, [3, -0.0933333, 0], [3, 0.973333, 0]], [4.19617e-05, [3, -0.973333, 0], [3, 0.533333, 0]], [4.19617e-05, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RKneePitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[0.702614, [3, -0.0133333, 0], [3, 0.653333, 0]], [1.53404, [3, -0.653333, 0], [3, 0.0933333, 0]], [0.48632, [3, -0.0933333, 0], [3, 0.973333, 0]], [1.18122, [3, -0.973333, 0], [3, 0.533333, 0]], [0.704148, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RShoulderPitch")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[1.46348, [3, -0.0133333, 0], [3, 0.653333, 0]], [1.61381, [3, -0.653333, 0], [3, 0.0933333, 0]], [1.51717, [3, -0.0933333, 0.000735381], [3, 0.973333, -0.00766897]], [1.5095, [3, -0.973333, 0.00766897], [3, 0.533333, -0.00420218]], [1.4374, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RShoulderRoll")
  times.append([0.04, 2, 2.28, 5.2, 6.8])
  keys.append([[-0.113558, [3, -0.0133333, 0], [3, 0.653333, 0]], [-0.188724, [3, -0.653333, 0], [3, 0.0933333, 0]], [-0.17185, [3, -0.0933333, 0], [3, 0.973333, 0]], [-0.205598, [3, -0.973333, 0.020811], [3, 0.533333, -0.0114033]], [-0.268493, [3, -0.533333, 0], [3, 0, 0]]])

  names.append("RWristYaw")
  times.append([0.04, 0.8, 2, 2.28, 5.2, 6.8])
  keys.append([[0.254602, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.141372, [3, -0.253333, 0], [3, 0.4, 0]], [0.449421, [3, -0.4, 0], [3, 0.0933333, 0]], [0.239262, [3, -0.0933333, 0.0092168], [3, 0.973333, -0.0961181]], [0.133416, [3, -0.973333, 0.0482282], [3, 0.533333, -0.0264264]], [0.0152981, [3, -0.533333, 0], [3, 0, 0]]])
  try:
    motion.angleInterpolationBezier(names, times, keys)
  except BaseException, err:
    print err

