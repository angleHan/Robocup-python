#!/usr/bin/python2.7 
# -*- coding: utf-8 -*-
# Choregraphe bezier export in Python.
from naoqi import ALProxy
def sit2ready(motion):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.498508, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.502386, [3, -0.386667, 0], [3, 0.4, 0]], [0.497983, [3, -0.4, 0.00440344], [3, 0.44, -0.00484378]], [0.022968, [3, -0.44, 0], [3, 0.373333, 0]], [0.0536479, [3, -0.373333, -0.0306799], [3, 0.36, 0.0295842]], [0.500042, [3, -0.36, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.0889301, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.061318, [3, -0.386667, 0], [3, 0.4, 0]], [0.0812599, [3, -0.4, 0], [3, 0.44, 0]], [0.0628521, [3, -0.44, 0.00497921], [3, 0.373333, -0.00422478]], [0.0536479, [3, -0.373333, 0], [3, 0.36, 0]], [0.0643861, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.905018, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.915757, [3, -0.386667, 0], [3, 0.4, 0]], [0.889678, [3, -0.4, 0], [3, 0.44, 0]], [0.917289, [3, -0.44, -0.00542427], [3, 0.373333, 0.00460241]], [0.921892, [3, -0.373333, 0], [3, 0.36, 0]], [-0.484786, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.00617791, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.00310993, [3, -0.386667, 0.00306797], [3, 0.4, -0.00317377]], [-0.0197456, [3, -0.4, 0], [3, 0.44, 0]], [0.021518, [3, -0.44, 0], [3, 0.373333, 0]], [0.021518, [3, -0.373333, 0], [3, 0.36, 0]], [-0.0873961, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-0.0873961, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.220854, [3, -0.386667, 0], [3, 0.4, 0]], [-0.185572, [3, -0.4, -0.00681787], [3, 0.44, 0.00749965]], [-0.177901, [3, -0.44, -0.00331947], [3, 0.373333, 0.00281652]], [-0.167164, [3, -0.373333, 0], [3, 0.36, 0]], [-0.171766, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-1.20116, [3, -0.0133333, 0], [3, 0.386667, 0]], [2.08007, [3, -0.386667, 0], [3, 0.4, 0]], [2.05858, [3, -0.4, 0], [3, 0.44, 0]], [2.06933, [3, -0.44, 0], [3, 0.373333, 0]], [2.05245, [3, -0.373333, 0], [3, 0.36, 0]], [2.07392, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.7476, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.7476, [3, -0.386667, 0], [3, 0.4, 0]], [0.0116, [3, -0.4, 0], [3, 0.44, 0]], [0.746, [3, -0.44, 0], [3, 0.373333, 0]], [0.742, [3, -0.373333, 0.00176485], [3, 0.36, -0.00170182]], [0.7356, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-1.53396, [3, -0.0133333, 0], [3, 0.386667, 0]], [-1.4772, [3, -0.386667, 0], [3, 0.4, 0]], [-1.53242, [3, -0.4, 0], [3, 0.44, 0]], [-0.917289, [3, -0.44, 0], [3, 0.373333, 0]], [-0.923426, [3, -0.373333, 0.00613659], [3, 0.36, -0.00591743]], [-0.966378, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.147306, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.400415, [3, -0.386667, -0.0527801], [3, 0.4, 0.0546001]], [0.469446, [3, -0.4, 0], [3, 0.44, 0]], [0.161112, [3, -0.44, 0], [3, 0.373333, 0]], [0.168782, [3, -0.373333, 0], [3, 0.36, 0]], [-0.342041, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-0.510779, [3, -0.0133333, 0], [3, 0.386667, 0]], [-1.13665, [3, -0.386667, 0], [3, 0.4, 0]], [-1.13665, [3, -0.4, 0], [3, 0.44, 0]], [-1.03387, [3, -0.44, 0], [3, 0.373333, 0]], [-1.03848, [3, -0.373333, 0], [3, 0.36, 0]], [-0.662646, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.938765, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.214717, [3, -0.386667, 0], [3, 0.4, 0]], [0.852862, [3, -0.4, 0], [3, 0.44, 0]], [0.44175, [3, -0.44, 0.0018081], [3, 0.373333, -0.00153415]], [0.440216, [3, -0.373333, 0], [3, 0.36, 0]], [1.68429, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[2.05553, [3, -0.0133333, 0], [3, 0.386667, 0]], [1.88677, [3, -0.386667, 0.0351871], [3, 0.4, -0.0364005]], [1.84076, [3, -0.4, 0.0248349], [3, 0.44, -0.0273184]], [1.73031, [3, -0.44, 0.0216952], [3, 0.373333, -0.018408]], [1.7119, [3, -0.373333, 0.003182], [3, 0.36, -0.00306836]], [1.70883, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.354312, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.690259, [3, -0.386667, 0], [3, 0.4, 0]], [0.644238, [3, -0.4, 0.0460208], [3, 0.44, -0.0506229]], [0.277612, [3, -0.44, 0], [3, 0.373333, 0]], [0.282215, [3, -0.373333, 0], [3, 0.36, 0]], [0.260738, [3, -0.36, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[1.6981, [3, -0.0133333, 0], [3, 0.386667, 0]], [-1.48649, [3, -0.386667, 0], [3, 0.4, 0]], [-1.46041, [3, -0.4, 0], [3, 0.44, 0]], [-1.54018, [3, -0.44, 0], [3, 0.373333, 0]], [-1.53251, [3, -0.373333, 0], [3, 0.36, 0]], [-1.54785, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.932006, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.243948, [3, -0.386667, 0.283137], [3, 0.4, -0.2929]], [-0.796104, [3, -0.4, 0.226448], [3, 0.44, -0.249092]], [-1.18267, [3, -0.44, 0], [3, 0.373333, 0]], [-1.17654, [3, -0.373333, 0], [3, 0.36, 0]], [-1.1796, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-0.00302602, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.0735901, [3, -0.386667, 0], [3, 0.4, 0]], [-0.00302602, [3, -0.4, 0], [3, 0.44, 0]], [-0.059784, [3, -0.44, 0], [3, 0.373333, 0]], [-0.059784, [3, -0.373333, 0], [3, 0.36, 0]], [-0.0720561, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.314512, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.0890141, [3, -0.386667, 0.0385546], [3, 0.4, -0.0398841]], [0.04913, [3, -0.4, 0], [3, 0.44, 0]], [0.092082, [3, -0.44, 0], [3, 0.373333, 0]], [0.0844118, [3, -0.373333, 0], [3, 0.36, 0]], [0.130432, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[1.4772, [3, -0.0133333, 0], [3, 0.386667, 0]], [1.51555, [3, -0.386667, -0.00593204], [3, 0.4, 0.00613659]], [1.52169, [3, -0.4, 0], [3, 0.44, 0]], [1.51402, [3, -0.44, 0.00470272], [3, 0.373333, -0.00399019]], [1.49561, [3, -0.373333, 0], [3, 0.36, 0]], [1.51248, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.7236, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.7252, [3, -0.386667, 0], [3, 0.4, 0]], [0.0108, [3, -0.4, 0], [3, 0.44, 0]], [0.7144, [3, -0.44, 0], [3, 0.373333, 0]], [0.7088, [3, -0.373333, 0], [3, 0.36, 0]], [0.7148, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-1.5049, [3, -0.0133333, 0], [3, 0.386667, 0]], [-1.53097, [3, -0.386667, 0], [3, 0.4, 0]], [-0.570689, [3, -0.4, -0.205507], [3, 0.44, 0.226058]], [-0.236277, [3, -0.44, -0.00903843], [3, 0.373333, 0.00766897]], [-0.228608, [3, -0.373333, 0], [3, 0.36, 0]], [-0.972599, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-0.153358, [3, -0.0133333, 0], [3, 0.386667, 0]], [0.26389, [3, -0.386667, -0.0846992], [3, 0.4, 0.0876199]], [0.363599, [3, -0.4, 0], [3, 0.44, 0]], [-0.00916195, [3, -0.44, 0], [3, 0.373333, 0]], [-0.00916195, [3, -0.373333, 0], [3, 0.36, 0]], [-0.16563, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-0.510779, [3, -0.0133333, 0], [3, 0.386667, 0]], [-1.13665, [3, -0.386667, 0], [3, 0.4, 0]], [-1.13665, [3, -0.4, 0], [3, 0.44, 0]], [-1.03387, [3, -0.44, 0], [3, 0.373333, 0]], [-1.03848, [3, -0.373333, 0], [3, 0.36, 0]], [-0.662646, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[0.874422, [3, -0.0133333, 0], [3, 0.386667, 0]], [2.11082, [3, -0.386667, 0], [3, 0.4, 0]], [2.10623, [3, -0.4, 0], [3, 0.44, 0]], [2.10623, [3, -0.44, 0], [3, 0.373333, 0]], [2.10623, [3, -0.373333, 0], [3, 0.36, 0]], [2.10316, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[1.9973, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.151844, [3, -0.386667, 0], [3, 0.4, 0]], [0.549213, [3, -0.4, -0.151942], [3, 0.44, 0.167136]], [0.805393, [3, -0.44, -0.256179], [3, 0.373333, 0.217364]], [1.97276, [3, -0.373333, -0.0445434], [3, 0.36, 0.0429525]], [2.01572, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-0.248551, [3, -0.0133333, 0], [3, 0.386667, 0]], [-0.13439, [3, -0.386667, -0.0874642], [3, 0.4, 0.0904802]], [0.285283, [3, -0.4, 0], [3, 0.44, 0]], [0.240796, [3, -0.44, 0.0444867], [3, 0.373333, -0.0377463]], [-0.073674, [3, -0.373333, 0.0397705], [3, 0.36, -0.0383501]], [-0.112024, [3, -0.36, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.04, 1.2, 2.4, 3.72, 4.84, 5.92])
    keys.append([[-1.57699, [3, -0.0133333, 0], [3, 0.386667, 0]], [-1.60461, [3, -0.386667, 0.00779119], [3, 0.4, -0.00805985]], [-1.62455, [3, -0.4, 0.00852218], [3, 0.44, -0.0093744]], [-1.6583, [3, -0.44, 0.00746889], [3, 0.373333, -0.00633724]], [-1.66597, [3, -0.373333, 0], [3, 0.36, 0]], [-1.64909, [3, -0.36, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        #motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
        #posture.setMaxTryNumber(1)#设置起身尝试上限为1
        #result = posture.goToPosture("StandInit", 1.2)
        #return result

    except BaseException, err:
        print err
        #return False
