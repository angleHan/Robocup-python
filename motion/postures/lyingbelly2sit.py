#!/usr/bin/python2.7 
# -*- coding: utf-8 -*-
# Choregraphe bezier export in Python.
from naoqi import ALProxy

def do_lyingbelly2sit(motion):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.28068, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.200912, [3, -0.173333, 0], [3, 0.146667, 0]], [0.294486, [3, -0.146667, -0.0178115], [3, 0.333333, 0.0404807]], [0.375789, [3, -0.333333, 0], [3, 0.266667, 0]], [0.352778, [3, -0.266667, 0], [3, 0.133333, 0]], [0.378855, [3, -0.133333, -0.00230122], [3, 0.266667, 0.00460244]], [0.383458, [3, -0.266667, -0.00227281], [3, 0.333333, 0.00284101]], [0.394197, [3, -0.333333, -0.00918797], [3, 0.0933333, 0.00257263]], [0.418739, [3, -0.0933333, -0.00369859], [3, 0.306667, 0.0121525]], [0.44175, [3, -0.306667, -0.0109768], [3, 0.0933333, 0.00334075]], [0.461692, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.461692, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.461692, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.498864, [3, -0.106667, 0], [3, 0.106667, 0]], [0.498864, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.0245859, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.0567998, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.0552659, [3, -0.146667, -0.00153397], [3, 0.333333, 0.00348629]], [-0.036858, [3, -0.333333, -0.00454516], [3, 0.266667, 0.00363613]], [-0.030722, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.030722, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.030722, [3, -0.266667, 0], [3, 0.333333, 0]], [-0.0337899, [3, -0.333333, 0.00119841], [3, 0.0933333, -0.000335556]], [-0.0353239, [3, -0.0933333, 0.000238631], [3, 0.306667, -0.000784073]], [-0.036858, [3, -0.306667, 0], [3, 0.0933333, 0]], [0.0674542, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.052114, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.052114, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.0797259, [3, -0.106667, 0], [3, 0.106667, 0]], [0.0797259, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.14117, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.0153821, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.0261199, [3, -0.146667, 0.0015624], [3, 0.333333, -0.00355091]], [-0.030722, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.030722, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.0414601, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.0291878, [3, -0.266667, -0.0122723], [3, 0.333333, 0.0153404]], [0.699462, [3, -0.333333, -0.0219164], [3, 0.0933333, 0.00613659]], [0.705598, [3, -0.0933333, -0.00613659], [3, 0.306667, 0.0201631]], [0.922581, [3, -0.306667, 0], [3, 0.0933333, 0]], [0.918823, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.918823, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.918823, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.912689, [3, -0.106667, 0], [3, 0.106667, 0]], [0.912689, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.0154824, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.0154824, [3, -0.173333, 0], [3, 0.146667, 0]], [0.374338, [3, -0.146667, -0.0659524], [3, 0.333333, 0.149892]], [0.63205, [3, -0.333333, 0], [3, 0.266667, 0]], [0.63205, [3, -0.266667, 0], [3, 0.133333, 0]], [0.63205, [3, -0.133333, 0], [3, 0.266667, 0]], [0.63205, [3, -0.266667, 0], [3, 0.333333, 0]], [0.07214, [3, -0.333333, 0.016436], [3, 0.0933333, -0.00460208]], [0.067538, [3, -0.0933333, 0.00460208], [3, 0.306667, -0.0151211]], [-8.26717e-05, [3, -0.306667, 0], [3, 0.0933333, 0]], [0.00157595, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.00157595, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.00157595, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.00455999, [3, -0.106667, 0], [3, 0.106667, 0]], [-0.00455999, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.0349066, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.0349066, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.0349066, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.0349066, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.0349066, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.0413762, [3, -0.133333, 0.00646959], [3, 0.266667, -0.0129392]], [-0.567537, [3, -0.266667, 0.178853], [3, 0.333333, -0.223566]], [-1.24863, [3, -0.333333, 0], [3, 0.0933333, 0]], [-0.0349066, [3, -0.0933333, 0], [3, 0.306667, 0]], [-0.260738, [3, -0.306667, 0], [3, 0.0933333, 0]], [-0.095066, [3, -0.0933333, 0], [3, 0.106667, 0]], [-1.22562, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.673385, [3, -0.0933333, -0.162979], [3, 0.106667, 0.186262]], [-0.177901, [3, -0.106667, -0.104823], [3, 0.106667, 0.104823]], [-0.0444441, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.343659, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.358999, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.179519, [3, -0.146667, -0.107181], [3, 0.333333, 0.243594]], [0.693327, [3, -0.333333, -0.317595], [3, 0.266667, 0.254076]], [1.53549, [3, -0.266667, 0], [3, 0.133333, 0]], [-1.55092, [3, -0.133333, 0.000766191], [3, 0.266667, -0.00153238]], [-1.55245, [3, -0.266667, 0.00153238], [3, 0.333333, -0.00191548]], [-1.69511, [3, -0.333333, 0], [3, 0.0933333, 0]], [-1.63989, [3, -0.0933333, 0], [3, 0.306667, 0]], [-1.65369, [3, -0.306667, 0], [3, 0.0933333, 0]], [-1.61688, [3, -0.0933333, -0.0305435], [3, 0.106667, 0.0349069]], [-1.45734, [3, -0.106667, -0.0654506], [3, 0.0933333, 0.0572693]], [-1.24872, [3, -0.0933333, -0.0505881], [3, 0.106667, 0.0578149]], [-1.13213, [3, -0.106667, 0], [3, 0.106667, 0]], [-1.22571, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.7512, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.7512, [3, -0.173333, 0], [3, 0.146667, 0]], [0.7512, [3, -0.146667, 0], [3, 0.333333, 0]], [0.7512, [3, -0.333333, 0], [3, 0.266667, 0]], [0.7512, [3, -0.266667, 0], [3, 0.133333, 0]], [0.7512, [3, -0.133333, 0], [3, 0.266667, 0]], [0.7512, [3, -0.266667, 0], [3, 0.333333, 0]], [0.7512, [3, -0.333333, 0], [3, 0.0933333, 0]], [0.7512, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.7476, [3, -0.306667, 0], [3, 0.0933333, 0]], [0.7476, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.7476, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.7476, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.7476, [3, -0.106667, 0], [3, 0.106667, 0]], [0.7476, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.283832, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.354396, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.337438, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.253067, [3, -0.333333, -0.00191766], [3, 0.266667, 0.00153413]], [-0.251533, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.253067, [3, -0.133333, 0.00153413], [3, 0.266667, -0.00306826]], [-1.49561, [3, -0.266667, 0], [3, 0.333333, 0]], [-1.46953, [3, -0.333333, -0.00758991], [3, 0.0933333, 0.00212517]], [-1.46646, [3, -0.0933333, 0], [3, 0.306667, 0]], [-1.53396, [3, -0.306667, 0], [3, 0.0933333, 0]], [-1.46493, [3, -0.0933333, -0.0053694], [3, 0.106667, 0.00613646]], [-1.45879, [3, -0.106667, 0], [3, 0.0933333, 0]], [-1.45879, [3, -0.0933333, 0], [3, 0.106667, 0]], [-1.468, [3, -0.106667, 0.00920482], [3, 0.106667, -0.00920482]], [-1.53242, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.0337899, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.763974, [3, -0.173333, -0.0308183], [3, 0.146667, 0.026077]], [0.790051, [3, -0.146667, 0], [3, 0.333333, 0]], [0.790051, [3, -0.333333, 0], [3, 0.266667, 0]], [0.790051, [3, -0.266667, 0], [3, 0.133333, 0]], [0.790051, [3, -0.133333, 0], [3, 0.266667, 0]], [0.776246, [3, -0.266667, 0], [3, 0.333333, 0]], [0.785451, [3, -0.333333, -0.0035952], [3, 0.0933333, 0.00100666]], [0.790051, [3, -0.0933333, 0], [3, 0.306667, 0]], [-0.196309, [3, -0.306667, 0], [3, 0.0933333, 0]], [-0.0843279, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.0904641, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.0904641, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.091998, [3, -0.106667, 0], [3, 0.106667, 0]], [0.14884, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.021518, [3, -0.0133333, 0], [3, 0.173333, 0]], [-1.14529, [3, -0.173333, 0], [3, 0.146667, 0]], [-1.13972, [3, -0.146667, 0], [3, 0.333333, 0]], [-1.14432, [3, -0.333333, 0], [3, 0.266667, 0]], [-1.14432, [3, -0.266667, 0], [3, 0.133333, 0]], [-1.14432, [3, -0.133333, 0], [3, 0.266667, 0]], [-1.13972, [3, -0.266667, 0], [3, 0.333333, 0]], [-1.14279, [3, -0.333333, 0.00119853], [3, 0.0933333, -0.000335587]], [-1.14432, [3, -0.0933333, 0], [3, 0.306667, 0]], [-0.944902, [3, -0.306667, -0.0729159], [3, 0.0933333, 0.0221918]], [-0.858999, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.882007, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.87127, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.880473, [3, -0.106667, 0], [3, 0.106667, 0]], [-0.527655, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.28068, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.279146, [3, -0.173333, 0.00153415], [3, 0.146667, -0.00129812]], [-0.0583338, [3, -0.146667, 0.00134997], [3, 0.333333, -0.00306812]], [-0.0614019, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.0506639, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.0598679, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.0552659, [3, -0.266667, 0], [3, 0.333333, 0]], [-0.0598679, [3, -0.333333, 0.00159793], [3, 0.0933333, -0.00044742]], [-0.0614019, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.0383082, [3, -0.306667, -0.0399862], [3, 0.0933333, 0.0121697]], [0.095066, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.095066, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.095066, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.0889301, [3, -0.106667, 0], [3, 0.106667, 0]], [0.943368, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[1.68736, [3, -0.0133333, 0], [3, 0.173333, 0]], [1.59839, [3, -0.173333, 0], [3, 0.146667, 0]], [1.70577, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.538476, [3, -0.333333, 0.560762], [3, 0.266667, -0.44861]], [-1.32235, [3, -0.266667, 0.174875], [3, 0.133333, -0.0874376]], [-1.40979, [3, -0.133333, 0], [3, 0.266667, 0]], [-1.06617, [3, -0.266667, -0.261348], [3, 0.333333, 0.326685]], [0.354312, [3, -0.333333, 0], [3, 0.0933333, 0]], [-0.461776, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.328234, [3, -0.306667, -0.28304], [3, 0.0933333, 0.0861426]], [0.645772, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.141086, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.246933, [3, -0.0933333, -0.105847], [3, 0.106667, 0.120967]], [2.08567, [3, -0.106667, 0], [3, 0.106667, 0]], [2.08567, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.162562, [3, -0.0133333, 0], [3, 0.173333, 0]], [1.29312, [3, -0.173333, 0], [3, 0.146667, 0]], [1.26091, [3, -0.146667, 0], [3, 0.333333, 0]], [1.26397, [3, -0.333333, 0], [3, 0.266667, 0]], [0.507713, [3, -0.266667, 0.261803], [3, 0.133333, -0.130901]], [0.0858622, [3, -0.133333, 0.0161071], [3, 0.266667, -0.0322142]], [0.0536479, [3, -0.266667, 0.00977216], [3, 0.333333, -0.0122152]], [0.0199001, [3, -0.333333, 0.0187755], [3, 0.0933333, -0.00525714]], [-0.01845, [3, -0.0933333, 0.00668143], [3, 0.306667, -0.0219533]], [-0.066004, [3, -0.306667, 0.0475539], [3, 0.0933333, -0.0144729]], [-0.314159, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.214803, [3, -0.106667, -0.0993564], [3, 0.0933333, 0.0869368]], [1.28238, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.37272, [3, -0.106667, 0], [3, 0.106667, 0]], [0.423342, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-1.48342, [3, -0.0133333, 0], [3, 0.173333, 0]], [-1.79483, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.090548, [3, -0.146667, -0.325138], [3, 0.333333, 0.738949]], [1.39743, [3, -0.333333, 0], [3, 0.266667, 0]], [1.34374, [3, -0.266667, 0.0536899], [3, 0.133333, -0.0268449]], [-1.82387, [3, -0.133333, 0], [3, 0.266667, 0]], [-1.77641, [3, -0.266667, -0.0120301], [3, 0.333333, 0.0150376]], [-1.74267, [3, -0.333333, -0.0337477], [3, 0.0933333, 0.00944936]], [-1.4374, [3, -0.0933333, 0], [3, 0.306667, 0]], [-1.47422, [3, -0.306667, 0], [3, 0.0933333, 0]], [-1.46501, [3, -0.0933333, 0], [3, 0.106667, 0]], [-1.48342, [3, -0.106667, 0.0184079], [3, 0.0933333, -0.0161069]], [-1.70738, [3, -0.0933333, 0], [3, 0.106667, 0]], [1.0216, [3, -0.106667, -0.566813], [3, 0.106667, 0.566813]], [1.69349, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.110406, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.110406, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.110406, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.110406, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.110406, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.110406, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.110406, [3, -0.266667, 0], [3, 0.333333, 0]], [0.736361, [3, -0.333333, 0], [3, 0.0933333, 0]], [0.736361, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.9227, [3, -0.306667, -0.0305774], [3, 0.0933333, 0.00930615]], [0.932006, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.932006, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.932006, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.926578, [3, -0.106667, 0], [3, 0.106667, 0]], [0.926578, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.174919, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.161112, [3, -0.173333, 0.0138066], [3, 0.146667, -0.0116825]], [-0.622761, [3, -0.146667, 0.0054002], [3, 0.333333, -0.0122732]], [-0.635035, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.635035, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.635035, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.635035, [3, -0.266667, 0], [3, 0.333333, 0]], [-0.0643861, [3, -0.333333, -0.0219145], [3, 0.0933333, 0.00613605]], [-0.05825, [3, -0.0933333, -0.00500781], [3, 0.306667, 0.0164542]], [0, [3, -0.306667, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.106667, 0]], [0, [3, -0.106667, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.106667, 0]], [0, [3, -0.106667, 0], [3, 0.106667, 0]], [0, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.268493, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.104354, [3, -0.173333, 0], [3, 0.146667, 0]], [0.115092, [3, -0.146667, 0], [3, 0.333333, 0]], [0.0414601, [3, -0.333333, 0.00191768], [3, 0.266667, -0.00153414]], [0.039926, [3, -0.266667, 0], [3, 0.133333, 0]], [0.039926, [3, -0.133333, 0], [3, 0.266667, 0]], [0.714885, [3, -0.266667, -0.165445], [3, 0.333333, 0.206806]], [1.15668, [3, -0.333333, 0], [3, 0.0933333, 0]], [0.0349066, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.0614019, [3, -0.306667, -0.00951522], [3, 0.0933333, 0.00289594]], [0.07214, [3, -0.0933333, -0.0107381], [3, 0.106667, 0.0122722]], [1.09378, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.826867, [3, -0.0933333, 0.142458], [3, 0.106667, -0.162809]], [0.177985, [3, -0.106667, 0.118117], [3, 0.106667, -0.118117]], [0.0598679, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.06447, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.0537319, [3, -0.173333, -0.0107381], [3, 0.146667, 0.00908612]], [0.06592, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.662729, [3, -0.333333, 0.209931], [3, 0.266667, -0.167945]], [-1.06771, [3, -0.266667, 0], [3, 0.133333, 0]], [1.38669, [3, -0.133333, 0], [3, 0.266667, 0]], [1.38669, [3, -0.266667, 0], [3, 0.333333, 0]], [1.40357, [3, -0.333333, -0.0168739], [3, 0.0933333, 0.0047247]], [1.63213, [3, -0.0933333, 0], [3, 0.306667, 0]], [1.62753, [3, -0.306667, 0.00460234], [3, 0.0933333, -0.00140071]], [1.50635, [3, -0.0933333, 0.04677], [3, 0.106667, -0.0534514]], [1.32687, [3, -0.106667, 0], [3, 0.0933333, 0]], [1.55543, [3, -0.0933333, 0], [3, 0.106667, 0]], [1.52936, [3, -0.106667, 0.00639168], [3, 0.106667, -0.00639168]], [1.51708, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.7324, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.7324, [3, -0.173333, 0], [3, 0.146667, 0]], [0.7324, [3, -0.146667, 0], [3, 0.333333, 0]], [0.7324, [3, -0.333333, 0], [3, 0.266667, 0]], [0.7324, [3, -0.266667, 0], [3, 0.133333, 0]], [0.7324, [3, -0.133333, 0], [3, 0.266667, 0]], [0.7324, [3, -0.266667, 0], [3, 0.333333, 0]], [0.7324, [3, -0.333333, 0], [3, 0.0933333, 0]], [0.7324, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.7252, [3, -0.306667, 0], [3, 0.0933333, 0]], [0.7252, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.7252, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.7252, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.7252, [3, -0.106667, 0], [3, 0.106667, 0]], [0.7252, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.340507, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.48398, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.37127, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.328317, [3, -0.333333, -0.00994256], [3, 0.266667, 0.00795405]], [-0.31758, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.328317, [3, -0.133333, 0.0107373], [3, 0.266667, -0.0214745]], [-1.39138, [3, -0.266667, 0.112902], [3, 0.333333, -0.141127]], [-1.53251, [3, -0.333333, 0], [3, 0.0933333, 0]], [-1.52637, [3, -0.0933333, 0], [3, 0.306667, 0]], [-1.52791, [3, -0.306667, 0], [3, 0.0933333, 0]], [-1.43893, [3, -0.0933333, 0], [3, 0.106667, 0]], [-1.4466, [3, -0.106667, 0], [3, 0.0933333, 0]], [-1.4466, [3, -0.0933333, 0], [3, 0.106667, 0]], [-1.45121, [3, -0.106667, 0.00460248], [3, 0.106667, -0.00460248]], [-1.51257, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.022968, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.759288, [3, -0.173333, 0.0271941], [3, 0.146667, -0.0230104]], [-0.782298, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.780764, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.780764, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.780764, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.757754, [3, -0.266667, 0], [3, 0.333333, 0]], [-0.788433, [3, -0.333333, 0], [3, 0.0933333, 0]], [-0.783833, [3, -0.0933333, -0.00460068], [3, 0.306667, 0.0151165]], [0.0844118, [3, -0.306667, 0], [3, 0.0933333, 0]], [0.0337899, [3, -0.0933333, 0.00536905], [3, 0.106667, -0.00613605]], [0.0276539, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.0276539, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.0337899, [3, -0.106667, 0], [3, 0.106667, 0]], [-0.161028, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.021518, [3, -0.0133333, 0], [3, 0.173333, 0]], [-1.14529, [3, -0.173333, 0], [3, 0.146667, 0]], [-1.13972, [3, -0.146667, 0], [3, 0.333333, 0]], [-1.14432, [3, -0.333333, 0], [3, 0.266667, 0]], [-1.14432, [3, -0.266667, 0], [3, 0.133333, 0]], [-1.14432, [3, -0.133333, 0], [3, 0.266667, 0]], [-1.13972, [3, -0.266667, 0], [3, 0.333333, 0]], [-1.14279, [3, -0.333333, 0.00119853], [3, 0.0933333, -0.000335587]], [-1.14432, [3, -0.0933333, 0], [3, 0.306667, 0]], [-0.944902, [3, -0.306667, -0.0729159], [3, 0.0933333, 0.0221918]], [-0.858999, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.882007, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.87127, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.880473, [3, -0.106667, 0], [3, 0.106667, 0]], [-0.527655, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[0.20253, [3, -0.0133333, 0], [3, 0.173333, 0]], [0.20253, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.0889301, [3, -0.146667, 0], [3, 0.333333, 0]], [-0.0843279, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.0843279, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.0843279, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.024502, [3, -0.266667, 0], [3, 0.333333, 0]], [-0.0643861, [3, -0.333333, 0], [3, 0.0933333, 0]], [-0.059784, [3, -0.0933333, -0.00250554], [3, 0.306667, 0.00823248]], [-0.032172, [3, -0.306667, -0.027612], [3, 0.0933333, 0.00840365]], [0.0537319, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.04913, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.04913, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.046062, [3, -0.106667, 0], [3, 0.106667, 0]], [0.866751, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[1.77027, [3, -0.0133333, 0], [3, 0.173333, 0]], [1.79483, [3, -0.173333, 0], [3, 0.146667, 0]], [1.67364, [3, -0.146667, 0.12119], [3, 0.333333, -0.275433]], [-0.496974, [3, -0.333333, 0.543718], [3, 0.266667, -0.434974]], [-1.26244, [3, -0.266667, 0.20692], [3, 0.133333, -0.10346]], [-1.42811, [3, -0.133333, 0], [3, 0.266667, 0]], [-1.00166, [3, -0.266667, -0.253167], [3, 0.333333, 0.316459]], [0.280764, [3, -0.333333, 0], [3, 0.0933333, 0]], [-0.455555, [3, -0.0933333, 0], [3, 0.306667, 0]], [0.222472, [3, -0.306667, -0.286568], [3, 0.0933333, 0.0872164]], [0.665798, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.147306, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.624379, [3, -0.0933333, -0.301379], [3, 0.106667, 0.344433]], [2.08474, [3, -0.106667, 0], [3, 0.106667, 0]], [2.08474, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[-0.276162, [3, -0.0133333, 0], [3, 0.173333, 0]], [-1.2748, [3, -0.173333, 0], [3, 0.146667, 0]], [-1.2748, [3, -0.146667, 0], [3, 0.333333, 0]], [-1.18582, [3, -0.333333, -0.0889715], [3, 0.266667, 0.0711772]], [-0.605971, [3, -0.266667, -0.272029], [3, 0.133333, 0.136015]], [0.0383082, [3, -0.133333, 0], [3, 0.266667, 0]], [-0.116626, [3, -0.266667, 0], [3, 0.333333, 0]], [0.022968, [3, -0.333333, -0.0539297], [3, 0.0933333, 0.0151003]], [0.0904641, [3, -0.0933333, 0], [3, 0.306667, 0]], [-0.139994, [3, -0.306667, 0], [3, 0.0933333, 0]], [0.314159, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.18864, [3, -0.106667, 0.125519], [3, 0.0933333, -0.109829]], [-1.08151, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.331386, [3, -0.106667, 0], [3, 0.106667, 0]], [-0.398881, [3, -0.106667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.04, 0.56, 1, 2, 2.8, 3.2, 4, 5, 5.28, 6.2, 6.48, 6.8, 7.08, 7.4, 7.72])
    keys.append([[1.82387, [3, -0.0133333, 0], [3, 0.173333, 0]], [1.82387, [3, -0.173333, 0], [3, 0.146667, 0]], [-0.0445281, [3, -0.146667, 0.364664], [3, 0.333333, -0.828781]], [-1.75646, [3, -0.333333, 0.0842558], [3, 0.266667, -0.0674046]], [-1.82387, [3, -0.266667, 0], [3, 0.133333, 0]], [1.82387, [3, -0.133333, 0], [3, 0.266667, 0]], [1.76866, [3, -0.266667, 0.0184059], [3, 0.333333, -0.0230073]], [1.69963, [3, -0.333333, 0.030761], [3, 0.0933333, -0.00861307]], [1.65054, [3, -0.0933333, 0.0112152], [3, 0.306667, -0.03685]], [1.55543, [3, -0.306667, 0.0278335], [3, 0.0933333, -0.00847108]], [1.54163, [3, -0.0933333, 0.0138056], [3, 0.106667, -0.0157778]], [1.46033, [3, -0.106667, 0], [3, 0.0933333, 0]], [1.80547, [3, -0.0933333, 0], [3, 0.106667, 0]], [-1.49723, [3, -0.106667, 0.156469], [3, 0.106667, -0.156469]], [-1.65369, [3, -0.106667, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        #motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
