#!/usr/bin/python2.7 
# -*- coding: utf-8 -*-
# Choregraphe bezier export in Python.

from naoqi import ALProxy

def do_lyingback2sit(motion):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.197844, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.197844, [3, -0.146667, 0], [3, 0.173333, 0]], [0.506179, [3, -0.173333, 0], [3, 0.173333, 0]], [0.506179, [3, -0.173333, 0], [3, 0.16, 0]], [0.507962, [3, -0.16, 0], [3, 0.493333, 0]], [-0.668866, [3, -0.493333, 0], [3, 0.813333, 0]], [0.484702, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.0536479, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.0536479, [3, -0.146667, 0], [3, 0.173333, 0]], [0.0429101, [3, -0.173333, 0], [3, 0.173333, 0]], [0.0429101, [3, -0.173333, 0], [3, 0.16, 0]], [0.0413762, [3, -0.16, 0.00153397], [3, 0.493333, -0.00472974]], [-0.0966839, [3, -0.493333, 0], [3, 0.813333, 0]], [0.0674542, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.277612, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.280001, [3, -0.146667, 0], [3, 0.173333, 0]], [0.346642, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.185656, [3, -0.173333, 0], [3, 0.16, 0]], [0.753151, [3, -0.16, -0.0512442], [3, 0.493333, 0.158003]], [0.911154, [3, -0.493333, -0.000930568], [3, 0.813333, 0.00153418]], [0.912689, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.0353239, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.0353239, [3, -0.146667, 0], [3, 0.173333, 0]], [0.0245859, [3, -0.173333, 0], [3, 0.173333, 0]], [0.0245859, [3, -0.173333, 0], [3, 0.16, 0]], [0.0353239, [3, -0.16, 0], [3, 0.493333, 0]], [0.021518, [3, -0.493333, 0.00289582], [3, 0.813333, -0.0047742]], [0.0123138, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.771559, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.751617, [3, -0.146667, 0], [3, 0.173333, 0]], [-1.43271, [3, -0.173333, 0.0767002], [3, 0.173333, -0.0767002]], [-1.50941, [3, -0.173333, 0], [3, 0.16, 0]], [-1.44345, [3, -0.16, -0.00876583], [3, 0.493333, 0.027028]], [-1.40203, [3, -0.493333, -0.0414184], [3, 0.813333, 0.0682844]], [-0.078192, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.668866, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.668866, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.185656, [3, -0.173333, -0.100477], [3, 0.173333, 0.100477]], [-0.066004, [3, -0.173333, -0.0335025], [3, 0.16, 0.0309254]], [0.00762796, [3, -0.16, -0.0120215], [3, 0.493333, 0.0370664]], [0.0812599, [3, -0.493333, 0], [3, 0.813333, 0]], [-1.20883, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.026, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.026, [3, -0.146667, 0], [3, 0.173333, 0]], [0.026, [3, -0.173333, 0], [3, 0.173333, 0]], [0.026, [3, -0.173333, 0], [3, 0.16, 0]], [0.026, [3, -0.16, 0], [3, 0.493333, 0]], [0.026, [3, -0.493333, 0], [3, 0.813333, 0]], [0.74, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.14262, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.575208, [3, -0.146667, 0], [3, 0.173333, 0]], [0.0123138, [3, -0.173333, -0.136015], [3, 0.173333, 0.136015]], [0.24088, [3, -0.173333, -0.0569013], [3, 0.16, 0.0525243]], [0.340591, [3, -0.16, 0], [3, 0.493333, 0]], [-0.762356, [3, -0.493333, 0.236156], [3, 0.813333, -0.389338]], [-1.53589, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.0628521, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.0873961, [3, -0.146667, 0], [3, 0.173333, 0]], [0.019984, [3, -0.173333, -0.0217317], [3, 0.173333, 0.0217317]], [0.0429941, [3, -0.173333, 0], [3, 0.16, 0]], [-0.030638, [3, -0.16, 0], [3, 0.493333, 0]], [0.308375, [3, -0.493333, 0], [3, 0.813333, 0]], [0.144238, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.021434, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.078192, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.00149202, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.0122299, [3, -0.173333, 0.00664736], [3, 0.16, -0.00613603]], [-0.0398422, [3, -0.16, 0.0106441], [3, 0.493333, -0.0328193]], [-0.14262, [3, -0.493333, 0.0598468], [3, 0.813333, -0.0986664]], [-0.515382, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.46476, [3, -0.0133333, 0], [3, 0.146667, 0]], [1.50174, [3, -0.146667, -0.0506223], [3, 0.173333, 0.0598263]], [1.56157, [3, -0.173333, -0.0598263], [3, 0.173333, 0.0598263]], [1.95887, [3, -0.173333, 0], [3, 0.16, 0]], [0.877407, [3, -0.16, 0.131485], [3, 0.493333, -0.405413]], [0.348176, [3, -0.493333, 0], [3, 0.813333, 0]], [0.9403, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[1.79167, [3, -0.0133333, 0], [3, 0.146667, 0]], [1.81774, [3, -0.146667, -0.0260753], [3, 0.173333, 0.0308162]], [2.07699, [3, -0.173333, 0], [3, 0.173333, 0]], [2.07699, [3, -0.173333, 0], [3, 0.16, 0]], [2.04324, [3, -0.16, 0.00563492], [3, 0.493333, -0.0173743]], [2.00797, [3, -0.493333, 0], [3, 0.813333, 0]], [2.05553, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.438682, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.493905, [3, -0.146667, -0.0372635], [3, 0.173333, 0.0440386]], [0.682588, [3, -0.173333, 0], [3, 0.173333, 0]], [0.291418, [3, -0.173333, 0], [3, 0.16, 0]], [0.418739, [3, -0.16, 0], [3, 0.493333, 0]], [0.348176, [3, -0.493333, 0], [3, 0.813333, 0]], [0.377323, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.866751, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.866751, [3, -0.146667, 0], [3, 0.173333, 0]], [1.58765, [3, -0.173333, -0.225505], [3, 0.173333, 0.225505]], [1.81315, [3, -0.173333, 0], [3, 0.16, 0]], [1.79935, [3, -0.16, 0], [3, 0.493333, 0]], [1.82387, [3, -0.493333, 0], [3, 0.813333, 0]], [1.69043, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.311444, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.708667, [3, -0.146667, 0], [3, 0.173333, 0]], [0.362067, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.210117, [3, -0.173333, 0], [3, 0.16, 0]], [0.717953, [3, -0.16, 0], [3, 0.493333, 0]], [0.694945, [3, -0.493333, 0], [3, 0.813333, 0]], [0.929646, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.0383082, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.0275701, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.0551819, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.0551819, [3, -0.173333, 0], [3, 0.16, 0]], [-0.0444441, [3, -0.16, -0.0056351], [3, 0.493333, 0.0173749]], [0.0138481, [3, -0.493333, 0], [3, 0.813333, 0]], [-0.00149202, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.335988, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.335988, [3, -0.146667, 0], [3, 0.173333, 0]], [1.4466, [3, -0.173333, 0], [3, 0.173333, 0]], [1.31775, [3, -0.173333, 0.0305776], [3, 0.16, -0.0282255]], [1.27019, [3, -0.16, 0], [3, 0.493333, 0]], [1.33462, [3, -0.493333, 0], [3, 0.813333, 0]], [0.11816, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.337438, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.337438, [3, -0.146667, 0], [3, 0.173333, 0]], [0.31903, [3, -0.173333, 0.018408], [3, 0.173333, -0.018408]], [0.151824, [3, -0.173333, 0.0526469], [3, 0.16, -0.0485972]], [0.0152981, [3, -0.16, 0.00248762], [3, 0.493333, -0.00767016]], [0.00762796, [3, -0.493333, 0], [3, 0.813333, 0]], [1.50174, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.0364, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.0364, [3, -0.146667, 0], [3, 0.173333, 0]], [0.0364, [3, -0.173333, 0], [3, 0.173333, 0]], [0.0364, [3, -0.173333, 0], [3, 0.16, 0]], [0.0364, [3, -0.16, 0], [3, 0.493333, 0]], [0.0364, [3, -0.493333, 0], [3, 0.813333, 0]], [0.7196, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.0767419, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.704148, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.0506639, [3, -0.173333, -0.153911], [3, 0.173333, 0.153911]], [0.21932, [3, -0.173333, -0.0736525], [3, 0.16, 0.0679869]], [0.374254, [3, -0.16, 0], [3, 0.493333, 0]], [-0.699545, [3, -0.493333, 0.236299], [3, 0.813333, -0.389573]], [-1.50336, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.0551819, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.076658, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.0705221, [3, -0.173333, -0.00613588], [3, 0.173333, 0.00613588]], [-0.0168321, [3, -0.173333, 0], [3, 0.16, 0]], [-0.102736, [3, -0.16, 0.0320575], [3, 0.493333, -0.0988439]], [-0.409536, [3, -0.493333, 0], [3, 0.813333, 0]], [-0.153358, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.021434, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.078192, [3, -0.146667, 0], [3, 0.173333, 0]], [-0.00149202, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.0122299, [3, -0.173333, 0.00664736], [3, 0.16, -0.00613603]], [-0.0398422, [3, -0.16, 0.0106441], [3, 0.493333, -0.0328193]], [-0.14262, [3, -0.493333, 0.0598468], [3, 0.813333, -0.0986664]], [-0.515382, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.335988, [3, -0.0133333, 0], [3, 0.146667, 0]], [1.69818, [3, -0.146667, 0], [3, 0.173333, 0]], [1.59694, [3, -0.173333, 0], [3, 0.173333, 0]], [1.98503, [3, -0.173333, 0], [3, 0.16, 0]], [0.882091, [3, -0.16, 0.142505], [3, 0.493333, -0.439391]], [0.239346, [3, -0.493333, 0], [3, 0.813333, 0]], [0.86982, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[1.74267, [3, -0.0133333, 0], [3, 0.146667, 0]], [1.79176, [3, -0.146667, -0.0490892], [3, 0.173333, 0.0580146]], [2.08567, [3, -0.173333, 0], [3, 0.173333, 0]], [2.08567, [3, -0.173333, 0], [3, 0.16, 0]], [2.08567, [3, -0.16, 0], [3, 0.493333, 0]], [2.07555, [3, -0.493333, 0.00281811], [3, 0.813333, -0.00464607]], [2.06328, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[-0.337522, [3, -0.0133333, 0], [3, 0.146667, 0]], [-0.366667, [3, -0.146667, 0.0291452], [3, 0.173333, -0.0344444]], [-0.671934, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.112024, [3, -0.173333, 0], [3, 0.16, 0]], [-0.242414, [3, -0.16, 0], [3, 0.493333, 0]], [-0.220938, [3, -0.493333, 0], [3, 0.813333, 0]], [-0.352862, [3, -0.813333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.04, 0.48, 1, 1.52, 2, 3.48, 5.92])
    keys.append([[0.96331, [3, -0.0133333, 0], [3, 0.146667, 0]], [0.96331, [3, -0.146667, 0], [3, 0.173333, 0]], [-1.82387, [3, -0.173333, 0], [3, 0.173333, 0]], [-1.75495, [3, -0.173333, -0.0156704], [3, 0.16, 0.014465]], [-1.73346, [3, -0.16, -0.0116465], [3, 0.493333, 0.0359102]], [-1.61228, [3, -0.493333, -0.0120961], [3, 0.813333, 0.0199421]], [-1.59233, [3, -0.813333, 0], [3, 0, 0]]])

    try:
    # uncomment the following line and modify the IP if you use this script outside Choregraphe.
    # motion = ALProxy("ALMotion", IP, 9559)
        #motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
